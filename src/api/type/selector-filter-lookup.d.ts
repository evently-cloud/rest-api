/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Lookup resource to filter the ledger for matching events. Use this JSON Schema to construct a JSON object and POST it back to FILTER_URI endpoint.
 */
export type SelectorFilterLookup =
  | {
      after?: After
      limit?: Limit
      entities: Entities
      events?: DataQuery
      meta?: MetaQuery
    }
  | {
      after?: After
      limit?: Limit
      entities?: Entities
      events: DataQuery
      meta?: MetaQuery
    }
  | {
      after?: After
      limit?: Limit
      entities?: Entities
      events?: DataQuery
      meta: MetaQuery
    }
/**
 * Select events that occur after this event ID.
 */
export type After = string
/**
 * Limit the number of returned events to this value. Useful for clients that cannot stream the events but must consume the entire result body before processing.
 */
export type Limit = number

/**
 * The entity name is the key, value is an entity key, or array of keys.
 */
export interface Entities {
  /**
   * @minItems 1
   *
   * This interface was referenced by `Entities`'s JSON-Schema definition
   * via the `patternProperty` "^[^\x00-\x1F\x80-\x9F]{1,80}$".
   */
  [k: string]: [string, ...string[]]
}
/**
 * Filter by event data values. Keys are event names, and the values are SQL JSONPath query objects.
 */
export interface DataQuery {
  [k: string]: JsonpathQuery
}
/**
 * JSONPath query to filter JSON objects.
 */
export interface JsonpathQuery {
  /**
   * A JSONPath query statement. Can include named variables, like '$age' or '$orderNumber'.
   */
  query: string
  /**
   * If the query contains named variables, they are stored in this object. The object keys are the variable names, without the preceding '$', like 'age' and 'orderNumber'.
   */
  vars?: {
    [k: string]: unknown
  }
}
/**
 * SQL JSONPath filter on the event's meta object.
 */
export interface MetaQuery {
  /**
   * A JSONPath query statement. Can include named variables, like '$age' or '$orderNumber'.
   */
  query: string
  /**
   * If the query contains named variables, they are stored in this object. The object keys are the variable names, without the preceding '$', like 'age' and 'orderNumber'.
   */
  vars?: {
    [k: string]: unknown
  }
}
